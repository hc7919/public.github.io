<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<div class="content-page">
	<div class="content">

		<div class="row mt-3">
			<div class="col-xl-12">
				<div class="card">
					<div class="card-body">
						<h4 class="header-title mb-4">회원관리</h4>

						<ul class="nav nav-tabs nav-bordered nav-justified">
							<li class="nav-item"><a href="javascript: gridRender();" class="nav-link active"> 회원관리 </a></li>
							<li class="nav-item"><a href="javascript: projectGridRender();" class="nav-link"> 프로젝트 관리 </a></li>
						</ul>
						<div class="tab-content">
							<div class="tab-pane active" id="home-b2">
							  <div id="jinoGrid"></div>
							</div>
						</div>
					</div>
				</div>
				<!-- end card-->
			</div>
			<!-- end col -->
		</div>

	</div>
</div>

<script type="text/javascript">
$('#testbtn').on('click', function() {
	alert('되냐?')
})

gridRender();

function projectGridRender() {
	document.querySelector("#jinoGrid").innerHTML = "<div class='row justify-content-center spinner-border avatar-lg text-primary m-2'></div>";
	//데이터의 구조는 _children안에 있는 객체들은 하위..
	//0.프로젝트의 종류
	//1. 프로젝트 이름
	//2. 상위 작업
	//3. 하위작업
	//4단계의 트리구조
	/* 
	const obj = {
	  proNo: proNo,
	  proName: proName,
	  proType: proType,
	  pm: memberId,
	  _children: [
		{
		  twCategoryNo: twCategoryNo, 
		  twCategoryName: twCategoryName,
		  _children: [
			{
			  	topWorkNo: topWorkNo,
			  	topWorkTitle: topWorkTitle,
			  	topWorkMemberId: memberId,
			  	_children: [
			  	  {
			  	    subWorkNo: subWorkNo,
			  	    subWorkTitle: subWorkTitle,
			  	    subWorkMemberId: memberId,
			  	  },
			  	],
			},  
		  ],
		},
	  ]
	}
	 */
	//쿼리로 뽑는거보단.. 그냥 데이터 합치는게 나은듯
	//일단 모든데이터 다가져오기
	axios
	  .post("/admin/jino/getAllDatas")
	  .then((res) => {
		 console.log("모든 정보", res);
		 const allDatas = res.data;
		 const projectList = allDatas.projectList;
		 const twCategoryList = allDatas.twCategoryList;
		 const topWorkList = allDatas.topWorkList;
		 const subWorkList = allDatas.subWorkList;
		 const twRelationList = allDatas.twRelationList;
		 
		 for (let i = 0; i < projectList.length; i++) {
			 const categoryArray = [];
			 for (let j = 0; j < twCategoryList.length; j++) {
				 //프로젝트 안에 카테고리 넣기
				 if (projectList[i].proNo == twCategoryList[j].proNo) {
					 categoryArray.push(twCategoryList[j]);
				 }
				 
				 const topWorkArray = [];
				 for (let k = 0; k < topWorkList.length; k++) {
					 //카테고리 안에 상위작업 넣기
					 if (twCategoryList[j].twCategoryNo == topWorkList[k].twCategoryNo) {
						 topWorkArray.push(topWorkList[k]);
					 }
					 
					 const subWorkArray = [];
					 for (let l = 0; l < subWorkList.length; l++) {
						 //상위작업 안에 하위작업 넣기
						 if (topWorkList[k].topWorkNo == subWorkList[l].topWorkNo) {
							 subWorkArray.push(subWorkList[l]);
						 }
					 }//네번째 for문
					 
					 topWorkList[k]._children = subWorkArray;
				 }//세번째 for문
				 
				 twCategoryList[j]._children = topWorkArray;
			 }//두번째 for문
			 
		   projectList[i]._children = categoryArray;
		 }//첫번째 for문
		 
		 console.log("트리데이터 : ", projectList);
		 
	     var table = new Tabulator("#jinoGrid", {
	         height:"600px",
	         data: projectList,
	         dataTree:true,
	         dataTreeStartExpanded:false,
	         pagination: "local",
	         paginationSize: 13,
	         
	         columns:[
	         {title:"프로젝트 이름", field:"proName", width:200},
	         {title:"프로젝트 종류", field:"proType", width:150, responsive:0}, //never hide this column
	         {title:"카테고리 이름", field:"twCategoryName", width:200, responsive:2}, //hide this column first
	         {title:"상위작업명", field:"topWorkTitle", width:300},
	         {title:"진행도", field:"topWorkProgress", sorter:"number", hozAlign:"left", formatter:"progress", width:200,  editable:true},
	         {title:"하위작업명", field:"subWorkTitle", width:300},
	         ],
	     });
	  });
	
	
	
	
}

function gridRender(url) {
    console.log("엥?");
    
    axios
      .get("/admin/jino/getAllMember")
      .then((res) => {
    	  console.log("잘왓니 멤버", res);
    	  const gridMemberData = res.data;
    	  
    	  return gridMemberData;
      })
      .then((gridMemberData) => {
    	//define some sample data
    	     var tabledata = [
    	        {id:1, name:"Oli Bob", age:"12", col:"red", dob:""},
    	        {id:2, name:"Mary May", age:"1", col:"blue", dob:"14/05/1982"},
    	        {id:3, name:"Christine Lobowski", age:"42", col:"green", dob:"22/05/1982"},
    	        {id:4, name:"Brendon Philips", age:"125", col:"orange", dob:"01/08/1980"},
    	        {id:5, name:"Margret Marmajuke", age:"16", col:"yellow", dob:"31/01/1999"},
    	     ];
    	    
    	    
    	     var table = new Tabulator("#jinoGrid", {
    	            height: 600, // set height of table (in CSS or here), this enables the Virtual DOM and improves render speed dramatically (can be any valid css height value)
    	            data: gridMemberData, //assign data to table
    	            layout:"fitColumns", //fit columns to width of table (optional)
    	            pagination: "local",
    	            paginationSize: 13,
    	            columns:[ //Define Table Columns
    	                
    	                //타이틀은 헤드명, filed는 멤버변수명으로 지정해서 쓰면 된다.
    	                {title:"회원 ID", field:"memberId", width:250},
    	                {title:"이름", field:"memberName", width:150},
    	                {title:"전화번호", field:"memberPhone", width:150},
    	                {title:"생년월일", field:"memberBirth", width:150},
    	                {title:"가입일", field:"memberRegdate", width:150},
    	                {title:"소개", field:"memberInfo", width:500},
    	                //{title:"이름", field:"memberName", hozAlign:"left", formatter:"progress"},
    	                //{title:"Favourite Color", field:"col"},
    	                //{title:"Date Of Birth", field:"dob", sorter:"date", hozAlign:"center"},
    	            ],
    	        });

    	        //trigger an alert message when the row is clicked
    	        table.on("rowClick", function(e, row){ 
    	            //alert("Row " + row.getData().id + " Clicked!!!!");
    	        });
      });
    
}


</script>