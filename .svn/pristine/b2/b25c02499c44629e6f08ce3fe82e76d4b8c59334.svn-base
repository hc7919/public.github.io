//package kr.or.ddit.controller.upload;
//
//import java.io.File;
//import java.io.FileOutputStream;
//import java.nio.file.Files;
//import java.util.ArrayList;
//import java.util.List;
//import java.util.UUID;
//
//import javax.servlet.http.HttpServletRequest;
//
//import org.springframework.http.HttpStatus;
//import org.springframework.http.ResponseEntity;
//import org.springframework.stereotype.Controller;
//import org.springframework.web.bind.annotation.PostMapping;
//import org.springframework.web.bind.annotation.RequestParam;
//import org.springframework.web.bind.annotation.ResponseBody;
//import org.springframework.web.multipart.MultipartFile;
//
//import com.google.gson.JsonElement;
//import com.google.gson.JsonParser;
//
//import kr.or.ddit.vo.FileVO;
//import lombok.extern.slf4j.Slf4j;
//import net.coobird.thumbnailator.Thumbnailator;
//
//@Controller
//@Slf4j
//public class UploadController {
//
//
//
//	//카테고리 수정시 진짜 폴더이름도 수정하는 메서드
//	@PostMapping(value="/updateCategoryFileLocation", produces = "text/plain;charset=UTF-8")
//	@ResponseBody
//	public ResponseEntity<String> updateCategoryFileLocation(String beforeCategory, String updateCategory ,String proNo,  HttpServletRequest req){
//		log.debug(beforeCategory); // 이전 카테고리 이름
//		log.debug(updateCategory); // 바뀐 카테고리 이름
//		log.debug(proNo);  // 프로젝트 이름
//
//		String path = req.getSession().getServletContext().getRealPath("resources/upload/");
//		String beforeFileLocation = getFolder(proNo, beforeCategory);  //  프로젝트명/이전 카테고리
//		String afterFileLocation = getFolder(proNo, updateCategory);  // 프로젝트명/ 바뀐 카테고리
//
//		File file  = new File(path +beforeFileLocation);
//		File newFile = new File(path +afterFileLocation);
//		log.debug("이전경로 : {}",file.getPath());
//		log.debug("새로운 경로 : {}",newFile.getPath());
//
//		boolean result = file.renameTo(newFile);
//		log.debug("result");
//
//		return new ResponseEntity<String>("폴더이름수정!", HttpStatus.OK);
//	}
//
//
//	//파일업로드시 진짜 폴더에 저장하는 메서드
//	@PostMapping( value="/uploadAjaxAction", produces="application/json; charset=UTF8")
//	@ResponseBody
//	public ResponseEntity<List<FileVO>> uploadAjaxPost(MultipartFile[] uploadFile, @RequestParam("jsonData") String data, HttpServletRequest req) {
//
//		String path = req.getSession().getServletContext().getRealPath("resources/upload");
//		log.debug("path : " +path);
//		List<FileVO> list = new ArrayList<FileVO>();
//
//		log.debug("data : {} ",data);
//		JsonParser parser = new JsonParser();
//		JsonElement element = parser.parse(data);
//
//		String projectId =  element.getAsJsonObject().get("projectId").getAsString(); // 250
//		String pathLocation = element.getAsJsonObject().get("fileLocation").getAsString(); //work
//		String uploadFolderPath = getFolder(projectId, pathLocation);
//		log.debug("프로젝트 번호 : {}", projectId);
//		log.debug("프로젝트 작업 목록 : {}", pathLocation);
//		File uploadPathunder = new File(path, getFolder(projectId, pathLocation));
//		log.debug("uploadPath :{}",uploadPathunder); // 받아온 데이터로 폴더를 생성
//		if(!uploadPathunder.exists()) {
//			uploadPathunder.mkdirs();
//		}
//		for(MultipartFile multipartFile : uploadFile) {
//
//			FileVO fileVO = new FileVO();
//			// UUID 로 파일 중복 방지
//			String uploadFileName = multipartFile.getOriginalFilename();
//			log.debug("uploadFileName : {}",uploadFileName); // 대본.txt
//			uploadFileName = uploadFileName.substring(uploadFileName.lastIndexOf("\\") + 1);
//			log.debug("uploadFileName2 : {}", uploadFileName);
//			fileVO.setFileName(uploadFileName);
//			UUID uuid = UUID.randomUUID();
//			uploadFileName = uuid.toString() + "_" + uploadFileName; // 2lkwake9fdslafk;la_남성이미지.png
//			try {
//				File saveFile = new File(uploadPathunder, uploadFileName);
//				multipartFile.transferTo(saveFile);
//				fileVO.setUUID(uuid.toString()); // 12dsakj12jkldsakldd21
//				fileVO.setFilePath(uploadFolderPath); // 250//내자료실
//
//				if(checkImageType(saveFile)) {
//					fileVO.setImage(true);
//					// 썸내일 만드는 것
//					FileOutputStream thumbnail = new FileOutputStream(new File(uploadPathunder, "s_"+uploadFileName));
//					Thumbnailator.createThumbnail(multipartFile.getInputStream(), thumbnail, 50, 50);
//					thumbnail.close();
//				}
//
//				list.add(fileVO);
//			}catch (Exception e) {
//				log.error(e.getMessage());
//			}
//		}
//		log.debug("보내는 리스트 출력 : {}",list.toString());
//		return new ResponseEntity<List<FileVO>>(list,HttpStatus.OK);
//	}
//
//
//	// 프로젝트 id와 카테고리를 받아와서 폴더 형태 / 로 만들어주는 메소드
//	private String getFolder(String projectId, String pathLocation) {
//		String str = projectId +"-"+ pathLocation;
//		return str.replace("-", File.separator);
//	}
//
//	// 파일인지 이미지인지 구별해주는 메서드
//	private boolean checkImageType(File file) {
//		try {
//			String contentType = Files.probeContentType(file.toPath());
//			log.debug("contentType : {}", contentType);
//			return contentType.startsWith("image");
//		}catch (Exception e) {
//			e.printStackTrace();
//		}
//		return false;
//	}
//
//}
